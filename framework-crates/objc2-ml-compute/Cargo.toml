# This file has been automatically generated by `objc2`'s `header-translator`.
# DO NOT EDIT

[package]
name = "objc2-ml-compute"
version.workspace = true
description = "Bindings to the MLCompute framework"
edition.workspace = true
rust-version.workspace = true
keywords = ["cocoa", "apple", "framework", "macos", "ios"]
categories.workspace = true
repository.workspace = true
license.workspace = true

[lints]
workspace = true

[dependencies]
bitflags = { workspace = true, optional = true, features = ["std"] }
block2 = { workspace = true, optional = true, features = ["alloc"] }
objc2 = { workspace = true, features = ["std"] }
objc2-foundation = { workspace = true, features = ["alloc"] }
objc2-metal = { workspace = true, optional = true, features = ["MTLDevice"] }

[package.metadata.docs.rs]
default-target = "aarch64-apple-darwin"
rustc-args = ["--cfg", "docsrs"] # Fix cross-crate link to objc2::topics
targets = [
    "aarch64-apple-darwin",
    "x86_64-apple-darwin",
    "aarch64-apple-ios",
    "aarch64-apple-tvos",
    "aarch64-apple-ios-macabi",
]

[features]
default = [
    "std",
    "MLCActivationDescriptor",
    "MLCActivationLayer",
    "MLCAdamOptimizer",
    "MLCAdamWOptimizer",
    "MLCArithmeticLayer",
    "MLCBatchNormalizationLayer",
    "MLCComparisonLayer",
    "MLCConcatenationLayer",
    "MLCConvolutionDescriptor",
    "MLCConvolutionLayer",
    "MLCDefines",
    "MLCDevice",
    "MLCDropoutLayer",
    "MLCEmbeddingDescriptor",
    "MLCEmbeddingLayer",
    "MLCFullyConnectedLayer",
    "MLCGatherLayer",
    "MLCGramMatrixLayer",
    "MLCGraph",
    "MLCGroupNormalizationLayer",
    "MLCInferenceGraph",
    "MLCInstanceNormalizationLayer",
    "MLCLSTMDescriptor",
    "MLCLSTMLayer",
    "MLCLayer",
    "MLCLayerNormalizationLayer",
    "MLCLossDescriptor",
    "MLCLossLayer",
    "MLCMatMulDescriptor",
    "MLCMatMulLayer",
    "MLCMultiheadAttentionDescriptor",
    "MLCMultiheadAttentionLayer",
    "MLCOptimizer",
    "MLCOptimizerDescriptor",
    "MLCPaddingLayer",
    "MLCPlatform",
    "MLCPoolingDescriptor",
    "MLCPoolingLayer",
    "MLCRMSPropOptimizer",
    "MLCReductionLayer",
    "MLCReshapeLayer",
    "MLCSGDOptimizer",
    "MLCScatterLayer",
    "MLCSelectionLayer",
    "MLCSliceLayer",
    "MLCSoftmaxLayer",
    "MLCSplitLayer",
    "MLCTensor",
    "MLCTensorData",
    "MLCTensorDescriptor",
    "MLCTensorOptimizerDeviceData",
    "MLCTensorParameter",
    "MLCTrainingGraph",
    "MLCTransposeLayer",
    "MLCTypes",
    "MLCUpsampleLayer",
    "MLCYOLOLossDescriptor",
    "MLCYOLOLossLayer",
    "bitflags",
    "block2",
    "objc2-metal",
]
std = ["alloc"]
alloc = []
bitflags = ["dep:bitflags"]
block2 = ["dep:block2"]
objc2-metal = ["dep:objc2-metal"]
unstable-darwin-objc = []

MLCActivationDescriptor = ["objc2-foundation/NSObject"]
MLCActivationLayer = []
MLCAdamOptimizer = ["objc2-foundation/NSObject"]
MLCAdamWOptimizer = ["objc2-foundation/NSObject"]
MLCArithmeticLayer = []
MLCBatchNormalizationLayer = []
MLCComparisonLayer = []
MLCConcatenationLayer = []
MLCConvolutionDescriptor = [
    "objc2-foundation/NSArray",
    "objc2-foundation/NSObject",
    "objc2-foundation/NSValue",
]
MLCConvolutionLayer = []
MLCDefines = []
MLCDevice = [
    "objc2-foundation/NSArray",
    "objc2-foundation/NSObject",
]
MLCDropoutLayer = []
MLCEmbeddingDescriptor = [
    "objc2-foundation/NSObject",
    "objc2-foundation/NSValue",
]
MLCEmbeddingLayer = []
MLCFullyConnectedLayer = []
MLCGatherLayer = []
MLCGramMatrixLayer = []
MLCGraph = [
    "objc2-foundation/NSArray",
    "objc2-foundation/NSDictionary",
    "objc2-foundation/NSString",
    "objc2-foundation/NSValue",
]
MLCGroupNormalizationLayer = []
MLCInferenceGraph = [
    "objc2-foundation/NSArray",
    "objc2-foundation/NSDate",
    "objc2-foundation/NSDictionary",
    "objc2-foundation/NSError",
    "objc2-foundation/NSString",
]
MLCInstanceNormalizationLayer = []
MLCLSTMDescriptor = ["objc2-foundation/NSObject"]
MLCLSTMLayer = ["objc2-foundation/NSArray"]
MLCLayer = ["objc2-foundation/NSString"]
MLCLayerNormalizationLayer = [
    "objc2-foundation/NSArray",
    "objc2-foundation/NSValue",
]
MLCLossDescriptor = ["objc2-foundation/NSObject"]
MLCLossLayer = []
MLCMatMulDescriptor = ["objc2-foundation/NSObject"]
MLCMatMulLayer = []
MLCMultiheadAttentionDescriptor = ["objc2-foundation/NSObject"]
MLCMultiheadAttentionLayer = ["objc2-foundation/NSArray"]
MLCOptimizer = ["objc2-foundation/NSObject"]
MLCOptimizerDescriptor = ["objc2-foundation/NSObject"]
MLCPaddingLayer = [
    "objc2-foundation/NSArray",
    "objc2-foundation/NSObject",
    "objc2-foundation/NSValue",
]
MLCPlatform = ["objc2-foundation/NSValue"]
MLCPoolingDescriptor = [
    "objc2-foundation/NSArray",
    "objc2-foundation/NSObject",
    "objc2-foundation/NSValue",
]
MLCPoolingLayer = []
MLCRMSPropOptimizer = ["objc2-foundation/NSObject"]
MLCReductionLayer = [
    "objc2-foundation/NSArray",
    "objc2-foundation/NSValue",
]
MLCReshapeLayer = [
    "objc2-foundation/NSArray",
    "objc2-foundation/NSValue",
]
MLCSGDOptimizer = ["objc2-foundation/NSObject"]
MLCScatterLayer = []
MLCSelectionLayer = []
MLCSliceLayer = [
    "objc2-foundation/NSArray",
    "objc2-foundation/NSValue",
]
MLCSoftmaxLayer = []
MLCSplitLayer = [
    "objc2-foundation/NSArray",
    "objc2-foundation/NSValue",
]
MLCTensor = [
    "objc2-foundation/NSArray",
    "objc2-foundation/NSData",
    "objc2-foundation/NSObject",
    "objc2-foundation/NSString",
    "objc2-foundation/NSValue",
]
MLCTensorData = []
MLCTensorDescriptor = [
    "objc2-foundation/NSArray",
    "objc2-foundation/NSObject",
    "objc2-foundation/NSValue",
]
MLCTensorOptimizerDeviceData = ["objc2-foundation/NSObject"]
MLCTensorParameter = ["objc2-foundation/NSArray"]
MLCTrainingGraph = [
    "objc2-foundation/NSArray",
    "objc2-foundation/NSData",
    "objc2-foundation/NSDate",
    "objc2-foundation/NSDictionary",
    "objc2-foundation/NSError",
    "objc2-foundation/NSString",
]
MLCTransposeLayer = [
    "objc2-foundation/NSArray",
    "objc2-foundation/NSValue",
]
MLCTypes = [
    "bitflags",
    "objc2-foundation/NSDate",
    "objc2-foundation/NSError",
    "objc2-foundation/NSString",
]
MLCUpsampleLayer = [
    "objc2-foundation/NSArray",
    "objc2-foundation/NSValue",
]
MLCYOLOLossDescriptor = [
    "objc2-foundation/NSData",
    "objc2-foundation/NSObject",
]
MLCYOLOLossLayer = []
