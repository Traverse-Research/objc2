# This file has been automatically generated by `objc2`'s `header-translator`.
# DO NOT EDIT

[package]
name = "objc2-core-media-io"
version.workspace = true
description = "Bindings to the CoreMediaIO framework"
edition.workspace = true
rust-version.workspace = true
keywords = ["cocoa", "apple", "framework", "macos"]
categories.workspace = true
repository.workspace = true
license.workspace = true

[lints]
workspace = true

[dependencies]
bitflags = { workspace = true, optional = true, features = ["std"] }
block2 = { workspace = true, optional = true, features = ["alloc"] }
dispatch2 = { workspace = true, optional = true, features = [
    "alloc",
    "objc2",
] }
libc = { workspace = true, optional = true }
objc2 = { workspace = true, features = ["std"] }
objc2-core-foundation = { workspace = true, optional = true, features = ["objc2"] }
objc2-core-media = { workspace = true, optional = true, features = [
    "CMAttachment",
    "CMBlockBuffer",
    "CMFormatDescription",
    "CMSampleBuffer",
    "CMSimpleQueue",
    "CMTime",
    "objc2",
] }
objc2-core-video = { workspace = true, optional = true, features = [
    "CVBuffer",
    "CVImageBuffer",
    "objc2",
] }
objc2-foundation = { workspace = true, features = ["alloc"] }

[package.metadata.docs.rs]
default-target = "aarch64-apple-darwin"
rustc-args = ["--cfg", "docsrs"] # Fix cross-crate link to objc2::topics
targets = [
    "aarch64-apple-darwin",
    "x86_64-apple-darwin",
    "aarch64-apple-ios-macabi",
]

[features]
default = [
    "std",
    "CMIOExtension",
    "CMIOExtensionDevice",
    "CMIOExtensionProperties",
    "CMIOExtensionProvider",
    "CMIOExtensionStream",
    "CMIOHardware",
    "CMIOHardwareControl",
    "CMIOHardwareDevice",
    "CMIOHardwareObject",
    "CMIOHardwarePlugIn",
    "CMIOHardwareStream",
    "CMIOHardwareSystem",
    "CMIOSampleBuffer",
    "bitflags",
    "block2",
    "dispatch2",
    "libc",
    "objc2-core-foundation",
    "objc2-core-media",
    "objc2-core-video",
]
std = ["alloc"]
alloc = []
bitflags = ["dep:bitflags"]
block2 = ["dep:block2"]
dispatch2 = ["dep:dispatch2"]
libc = ["dep:libc"]
objc2-core-foundation = ["dep:objc2-core-foundation"]
objc2-core-media = ["dep:objc2-core-media"]
objc2-core-video = ["dep:objc2-core-video"]
unstable-darwin-objc = []

CMIOExtension = []
CMIOExtensionDevice = [
    "objc2-foundation/NSArray",
    "objc2-foundation/NSDictionary",
    "objc2-foundation/NSError",
    "objc2-foundation/NSSet",
    "objc2-foundation/NSString",
    "objc2-foundation/NSUUID",
    "objc2-foundation/NSValue",
]
CMIOExtensionProperties = [
    "objc2-foundation/NSArray",
    "objc2-foundation/NSDictionary",
    "objc2-foundation/NSObject",
    "objc2-foundation/NSString",
    "objc2-foundation/NSUUID",
]
CMIOExtensionProvider = [
    "objc2-foundation/NSArray",
    "objc2-foundation/NSDictionary",
    "objc2-foundation/NSError",
    "objc2-foundation/NSSet",
    "objc2-foundation/NSString",
]
CMIOExtensionStream = [
    "bitflags",
    "objc2-foundation/NSArray",
    "objc2-foundation/NSDictionary",
    "objc2-foundation/NSError",
    "objc2-foundation/NSSet",
    "objc2-foundation/NSString",
    "objc2-foundation/NSUUID",
    "objc2-foundation/NSValue",
]
CMIOHardware = []
CMIOHardwareControl = []
CMIOHardwareDevice = []
CMIOHardwareObject = []
CMIOHardwarePlugIn = []
CMIOHardwareStream = []
CMIOHardwareSystem = []
CMIOSampleBuffer = []
