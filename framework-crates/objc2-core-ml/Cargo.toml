# This file has been automatically generated by `objc2`'s `header-translator`.
# DO NOT EDIT

[package]
name = "objc2-core-ml"
version.workspace = true
description = "Bindings to the CoreML framework"
edition.workspace = true
rust-version.workspace = true
keywords = ["cocoa", "apple", "framework", "macos", "ios"]
categories.workspace = true
repository.workspace = true
license.workspace = true

[lints]
workspace = true

[dependencies]
bitflags = { workspace = true, optional = true, features = ["std"] }
block2 = { workspace = true, optional = true, features = ["alloc"] }
objc2 = { workspace = true, features = ["std"] }
objc2-core-graphics = { workspace = true, optional = true, features = [
    "CGImage",
    "objc2",
] }
objc2-core-video = { workspace = true, optional = true, features = [
    "CVBuffer",
    "CVImageBuffer",
    "CVPixelBuffer",
    "objc2",
] }
objc2-foundation = { workspace = true, features = ["alloc"] }
objc2-image-io = { workspace = true, optional = true, features = [
    "CGImageProperties",
    "objc2",
] }

[target.'cfg(not(target_os = "watchos"))'.dependencies]
objc2-metal = { workspace = true, optional = true, features = [
    "MTLAllocation",
    "MTLCommandBuffer",
    "MTLDevice",
    "MTLResource",
    "MTLTexture",
] }

[package.metadata.docs.rs]
default-target = "aarch64-apple-darwin"
rustc-args = ["--cfg", "docsrs"] # Fix cross-crate link to objc2::topics
targets = [
    "aarch64-apple-darwin",
    "x86_64-apple-darwin",
    "aarch64-apple-ios",
    "aarch64-apple-tvos",
    "aarch64-apple-watchos",
    "aarch64-apple-ios-macabi",
    "aarch64-apple-visionos",
]

[features]
default = [
    "std",
    "MLAllComputeDevices",
    "MLArrayBatchProvider",
    "MLBatchProvider",
    "MLCPUComputeDevice",
    "MLComputeDeviceProtocol",
    "MLComputePlan",
    "MLComputePlanCost",
    "MLComputePlanDeviceUsage",
    "MLCustomLayer",
    "MLCustomModel",
    "MLDictionaryConstraint",
    "MLDictionaryFeatureProvider",
    "MLExport",
    "MLFeatureDescription",
    "MLFeatureProvider",
    "MLFeatureType",
    "MLFeatureValue",
    "MLFeatureValue_MLImageConversion",
    "MLGPUComputeDevice",
    "MLImageConstraint",
    "MLImageSize",
    "MLImageSizeConstraint",
    "MLImageSizeConstraintType",
    "MLKey",
    "MLMetricKey",
    "MLModel",
    "MLModelAsset",
    "MLModelCollection",
    "MLModelCollectionEntry",
    "MLModelConfiguration",
    "MLModelDescription",
    "MLModelError",
    "MLModelMetadataKeys",
    "MLModelStructure",
    "MLModelStructureNeuralNetwork",
    "MLModelStructureNeuralNetworkLayer",
    "MLModelStructurePipeline",
    "MLModelStructureProgram",
    "MLModelStructureProgramArgument",
    "MLModelStructureProgramBinding",
    "MLModelStructureProgramBlock",
    "MLModelStructureProgramFunction",
    "MLModelStructureProgramNamedValueType",
    "MLModelStructureProgramOperation",
    "MLModelStructureProgramValue",
    "MLModelStructureProgramValueType",
    "MLModel_MLComputeDevice",
    "MLModel_MLModelCompilation",
    "MLModel_MLState",
    "MLMultiArray",
    "MLMultiArrayConstraint",
    "MLMultiArrayShapeConstraint",
    "MLMultiArrayShapeConstraintType",
    "MLNeuralEngineComputeDevice",
    "MLNumericConstraint",
    "MLOptimizationHints",
    "MLParameterDescription",
    "MLParameterKey",
    "MLPredictionOptions",
    "MLReshapeFrequencyHint",
    "MLSequence",
    "MLSequenceConstraint",
    "MLSpecializationStrategy",
    "MLState",
    "MLStateConstraint",
    "MLTask",
    "MLUpdateContext",
    "MLUpdateProgressEvent",
    "MLUpdateProgressHandlers",
    "MLUpdateTask",
    "MLWritable",
    "bitflags",
    "block2",
    "objc2-core-graphics",
    "objc2-core-video",
    "objc2-image-io",
    "objc2-metal",
]
std = ["alloc"]
alloc = []
bitflags = ["dep:bitflags"]
block2 = ["dep:block2"]
objc2-core-graphics = ["dep:objc2-core-graphics"]
objc2-core-video = ["dep:objc2-core-video"]
objc2-image-io = ["dep:objc2-image-io"]
objc2-metal = ["dep:objc2-metal"]
unstable-darwin-objc = []

MLAllComputeDevices = ["objc2-foundation/NSArray"]
MLArrayBatchProvider = [
    "objc2-foundation/NSArray",
    "objc2-foundation/NSDictionary",
    "objc2-foundation/NSError",
    "objc2-foundation/NSString",
]
MLBatchProvider = []
MLCPUComputeDevice = []
MLComputeDeviceProtocol = []
MLComputePlan = [
    "objc2-foundation/NSError",
    "objc2-foundation/NSURL",
]
MLComputePlanCost = []
MLComputePlanDeviceUsage = ["objc2-foundation/NSArray"]
MLCustomLayer = [
    "objc2-foundation/NSArray",
    "objc2-foundation/NSData",
    "objc2-foundation/NSDictionary",
    "objc2-foundation/NSError",
    "objc2-foundation/NSString",
    "objc2-foundation/NSValue",
]
MLCustomModel = [
    "objc2-foundation/NSDictionary",
    "objc2-foundation/NSError",
    "objc2-foundation/NSString",
]
MLDictionaryConstraint = ["objc2-foundation/NSObject"]
MLDictionaryFeatureProvider = [
    "objc2-foundation/NSDictionary",
    "objc2-foundation/NSEnumerator",
    "objc2-foundation/NSError",
    "objc2-foundation/NSObject",
    "objc2-foundation/NSString",
]
MLExport = []
MLFeatureDescription = [
    "objc2-foundation/NSObject",
    "objc2-foundation/NSString",
]
MLFeatureProvider = [
    "objc2-foundation/NSSet",
    "objc2-foundation/NSString",
]
MLFeatureType = []
MLFeatureValue = [
    "objc2-foundation/NSDictionary",
    "objc2-foundation/NSError",
    "objc2-foundation/NSObject",
    "objc2-foundation/NSString",
    "objc2-foundation/NSValue",
]
MLFeatureValue_MLImageConversion = [
    "objc2-foundation/NSDictionary",
    "objc2-foundation/NSError",
    "objc2-foundation/NSString",
    "objc2-foundation/NSURL",
]
MLGPUComputeDevice = []
MLImageConstraint = ["objc2-foundation/NSObject"]
MLImageSize = ["objc2-foundation/NSObject"]
MLImageSizeConstraint = [
    "objc2-foundation/NSArray",
    "objc2-foundation/NSObject",
    "objc2-foundation/NSRange",
]
MLImageSizeConstraintType = []
MLKey = [
    "objc2-foundation/NSObject",
    "objc2-foundation/NSString",
]
MLMetricKey = ["objc2-foundation/NSObject"]
MLModel = [
    "objc2-foundation/NSError",
    "objc2-foundation/NSURL",
]
MLModelAsset = [
    "objc2-foundation/NSArray",
    "objc2-foundation/NSData",
    "objc2-foundation/NSDictionary",
    "objc2-foundation/NSError",
    "objc2-foundation/NSString",
    "objc2-foundation/NSURL",
]
MLModelCollection = [
    "objc2-foundation/NSDictionary",
    "objc2-foundation/NSError",
    "objc2-foundation/NSNotification",
    "objc2-foundation/NSProgress",
    "objc2-foundation/NSString",
]
MLModelCollectionEntry = [
    "objc2-foundation/NSString",
    "objc2-foundation/NSURL",
]
MLModelConfiguration = [
    "objc2-foundation/NSDictionary",
    "objc2-foundation/NSObject",
    "objc2-foundation/NSString",
]
MLModelDescription = [
    "objc2-foundation/NSArray",
    "objc2-foundation/NSDictionary",
    "objc2-foundation/NSObject",
    "objc2-foundation/NSString",
]
MLModelError = ["objc2-foundation/NSString"]
MLModelMetadataKeys = ["objc2-foundation/NSString"]
MLModelStructure = [
    "objc2-foundation/NSError",
    "objc2-foundation/NSURL",
]
MLModelStructureNeuralNetwork = ["objc2-foundation/NSArray"]
MLModelStructureNeuralNetworkLayer = [
    "objc2-foundation/NSArray",
    "objc2-foundation/NSString",
]
MLModelStructurePipeline = [
    "objc2-foundation/NSArray",
    "objc2-foundation/NSString",
]
MLModelStructureProgram = [
    "objc2-foundation/NSDictionary",
    "objc2-foundation/NSString",
]
MLModelStructureProgramArgument = ["objc2-foundation/NSArray"]
MLModelStructureProgramBinding = ["objc2-foundation/NSString"]
MLModelStructureProgramBlock = [
    "objc2-foundation/NSArray",
    "objc2-foundation/NSString",
]
MLModelStructureProgramFunction = ["objc2-foundation/NSArray"]
MLModelStructureProgramNamedValueType = ["objc2-foundation/NSString"]
MLModelStructureProgramOperation = [
    "objc2-foundation/NSArray",
    "objc2-foundation/NSDictionary",
    "objc2-foundation/NSString",
]
MLModelStructureProgramValue = []
MLModelStructureProgramValueType = []
MLModel_MLComputeDevice = ["objc2-foundation/NSArray"]
MLModel_MLModelCompilation = [
    "objc2-foundation/NSError",
    "objc2-foundation/NSURL",
]
MLModel_MLState = ["objc2-foundation/NSError"]
MLMultiArray = [
    "objc2-foundation/NSArray",
    "objc2-foundation/NSError",
    "objc2-foundation/NSObject",
    "objc2-foundation/NSValue",
]
MLMultiArrayConstraint = [
    "objc2-foundation/NSArray",
    "objc2-foundation/NSObject",
    "objc2-foundation/NSValue",
]
MLMultiArrayShapeConstraint = [
    "objc2-foundation/NSArray",
    "objc2-foundation/NSObject",
    "objc2-foundation/NSValue",
]
MLMultiArrayShapeConstraintType = []
MLNeuralEngineComputeDevice = []
MLNumericConstraint = [
    "objc2-foundation/NSObject",
    "objc2-foundation/NSSet",
    "objc2-foundation/NSValue",
]
MLOptimizationHints = ["objc2-foundation/NSObject"]
MLParameterDescription = ["objc2-foundation/NSObject"]
MLParameterKey = [
    "objc2-foundation/NSObject",
    "objc2-foundation/NSString",
]
MLPredictionOptions = [
    "objc2-foundation/NSDictionary",
    "objc2-foundation/NSString",
]
MLReshapeFrequencyHint = []
MLSequence = [
    "objc2-foundation/NSArray",
    "objc2-foundation/NSObject",
    "objc2-foundation/NSString",
    "objc2-foundation/NSValue",
]
MLSequenceConstraint = [
    "objc2-foundation/NSObject",
    "objc2-foundation/NSRange",
]
MLSpecializationStrategy = []
MLState = ["objc2-foundation/NSString"]
MLStateConstraint = [
    "objc2-foundation/NSArray",
    "objc2-foundation/NSObject",
    "objc2-foundation/NSValue",
]
MLTask = [
    "objc2-foundation/NSError",
    "objc2-foundation/NSString",
]
MLUpdateContext = ["objc2-foundation/NSDictionary"]
MLUpdateProgressEvent = ["bitflags"]
MLUpdateProgressHandlers = []
MLUpdateTask = [
    "objc2-foundation/NSDictionary",
    "objc2-foundation/NSError",
    "objc2-foundation/NSURL",
]
MLWritable = [
    "objc2-foundation/NSError",
    "objc2-foundation/NSURL",
]
