error[E0119]: conflicting implementations of trait `AsRef<AnyObject>` for type `MyRootClass`
 --> ui/extern_class_subclass_object.rs
  |
  | / extern_class!(
  | |     #[unsafe(super(AnyObject))]
  | |     #[thread_kind = AnyThread]
  | |     pub struct MyRootClass;
  | | );
  | | ^
  | | |
  | |_first implementation here
  |   conflicting implementation for `MyRootClass`
  |
  = note: this error originates in the macro `$crate::__extern_class_impl_as_ref_borrow` which comes from the expansion of the macro `extern_class` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0119]: conflicting implementations of trait `Borrow<AnyObject>` for type `MyRootClass`
 --> ui/extern_class_subclass_object.rs
  |
  | / extern_class!(
  | |     #[unsafe(super(AnyObject))]
  | |     #[thread_kind = AnyThread]
  | |     pub struct MyRootClass;
  | | );
  | | ^
  | | |
  | |_first implementation here
  |   conflicting implementation for `MyRootClass`
  |
  = note: this error originates in the macro `$crate::__extern_class_impl_as_ref_borrow` which comes from the expansion of the macro `extern_class` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the trait bound `AnyObject: ClassType` is not satisfied
 --> ui/extern_class_subclass_object.rs
  |
  | / extern_class!(
  | |     #[unsafe(super(AnyObject))]
  | |     #[thread_kind = AnyThread]
  | |     pub struct MyRootClass;
  | | );
  | |_^ the trait `ClassType` is not implemented for `AnyObject`
  |
  = help: the following other types implement trait `ClassType`:
            MyRootClass
            NSObject
            __NSProxy
note: required by a bound in `ValidThreadKind::check`
 --> $WORKSPACE/crates/objc2/src/__macros/extern_class/checks.rs
  |
  |     Self::Super: ClassType,
  |                  ^^^^^^^^^ required by this bound in `ValidThreadKind::check`
...
  |     fn check() {}
  |        ----- required by a bound in this associated function
  = note: this error originates in the macro `$crate::__extern_class_inner` which comes from the expansion of the macro `extern_class` (in Nightly builds, run with -Z macro-backtrace for more info)
