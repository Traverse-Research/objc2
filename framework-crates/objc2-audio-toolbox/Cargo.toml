# This file has been automatically generated by `objc2`'s `header-translator`.
# DO NOT EDIT

[package]
name = "objc2-audio-toolbox"
version.workspace = true
description = "Bindings to the AudioToolbox framework"
edition.workspace = true
rust-version.workspace = true
keywords = ["cocoa", "apple", "framework", "macos", "ios"]
categories.workspace = true
repository.workspace = true
license.workspace = true

[lints]
workspace = true

[dependencies]
bitflags = { workspace = true, optional = true, features = ["std"] }
block2 = { workspace = true, optional = true, features = ["alloc"] }
dispatch2 = { workspace = true, optional = true, features = [
    "alloc",
    "objc2",
] }
libc = { workspace = true, optional = true }
objc2 = { workspace = true, features = ["std"] }
objc2-core-audio = { workspace = true, optional = true, features = [
    "AudioHardware",
    "objc2",
] }
objc2-core-audio-types = { workspace = true, optional = true, features = [
    "CoreAudioBaseTypes",
    "objc2",
] }
objc2-core-foundation = { workspace = true, optional = true, features = [
    "CFArray",
    "CFData",
    "CFDate",
    "CFDictionary",
    "CFRunLoop",
    "CFURL",
    "objc2",
] }
objc2-core-midi = { workspace = true, optional = true, features = [
    "MIDICapabilityInquiry",
    "MIDIMessages",
    "MIDIServices",
    "objc2",
] }
objc2-foundation = { workspace = true, features = ["alloc"] }

[package.metadata.docs.rs]
default-target = "aarch64-apple-darwin"
rustc-args = ["--cfg", "docsrs"] # Fix cross-crate link to objc2::topics
targets = [
    "aarch64-apple-darwin",
    "x86_64-apple-darwin",
    "aarch64-apple-ios",
    "aarch64-apple-tvos",
    "aarch64-apple-ios-macabi",
    "aarch64-apple-visionos",
]
features = ["objc2-core-midi"]

[features]
default = [
    "std",
    "AUAudioUnit",
    "AUAudioUnitImplementation",
    "AUCocoaUIView",
    "AUComponent",
    "AUGraph",
    "AUParameters",
    "AudioCodec",
    "AudioComponent",
    "AudioConverter",
    "AudioFile",
    "AudioFileStream",
    "AudioFormat",
    "AudioOutputUnit",
    "AudioQueue",
    "AudioServices",
    "AudioSession",
    "AudioUnit",
    "AudioUnitCarbonView",
    "AudioUnitParameters",
    "AudioUnitProperties",
    "AudioUnitUtilities",
    "AudioWorkInterval",
    "CAFFile",
    "CAShow",
    "DefaultAudioOutput",
    "ExtendedAudioFile",
    "MusicDevice",
    "MusicPlayer",
    "bitflags",
    "block2",
    "dispatch2",
    "libc",
    "objc2-core-audio",
    "objc2-core-audio-types",
    "objc2-core-foundation",
]
std = ["alloc"]
alloc = []
bitflags = ["dep:bitflags"]
block2 = ["dep:block2"]
dispatch2 = ["dep:dispatch2"]
libc = ["dep:libc"]
objc2-core-audio = ["dep:objc2-core-audio"]
objc2-core-audio-types = ["dep:objc2-core-audio-types"]
objc2-core-foundation = ["dep:objc2-core-foundation"]
objc2-core-midi = ["dep:objc2-core-midi"]
unstable-darwin-objc = []

AUAudioUnit = [
    "bitflags",
    "objc2-foundation/NSArray",
    "objc2-foundation/NSDate",
    "objc2-foundation/NSDictionary",
    "objc2-foundation/NSEnumerator",
    "objc2-foundation/NSError",
    "objc2-foundation/NSKeyValueObserving",
    "objc2-foundation/NSObject",
    "objc2-foundation/NSString",
    "objc2-foundation/NSValue",
]
AUAudioUnitImplementation = [
    "objc2-foundation/NSArray",
    "objc2-foundation/NSError",
    "objc2-foundation/NSExtensionRequestHandling",
    "objc2-foundation/NSString",
    "objc2-foundation/NSValue",
]
AUCocoaUIView = []
AUComponent = ["bitflags"]
AUGraph = []
AUParameters = [
    "objc2-foundation/NSArray",
    "objc2-foundation/NSObject",
    "objc2-foundation/NSString",
    "objc2-foundation/NSValue",
]
AudioCodec = ["bitflags"]
AudioComponent = ["bitflags"]
AudioConverter = ["bitflags"]
AudioFile = ["bitflags"]
AudioFileStream = ["bitflags"]
AudioFormat = []
AudioOutputUnit = []
AudioQueue = ["bitflags"]
AudioServices = []
AudioSession = []
AudioUnit = []
AudioUnitCarbonView = []
AudioUnitParameters = []
AudioUnitProperties = ["bitflags"]
AudioUnitUtilities = []
AudioWorkInterval = []
CAFFile = ["bitflags"]
CAShow = []
DefaultAudioOutput = []
ExtendedAudioFile = []
MusicDevice = []
MusicPlayer = ["bitflags"]
