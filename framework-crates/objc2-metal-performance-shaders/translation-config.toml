framework = "MetalPerformanceShaders"
crate = "objc2-metal-performance-shaders"
required-crates = ["bitflags", "objc2", "objc2-foundation", "objc2-metal"]
custom-lib-rs = true
macos = "10.13"
maccatalyst = "13.0"
ios = "9.0"
tvos = "9.0"
visionos = "1.0"

# Defined in both MPSCore.MPSImage and MPSCore.MPSNDArray
typedef.MPSImageBatch.skipped = true

# Has a union field, but we'd rather have it as just a struct
struct._MPSPackedFloat3.skipped = true
typedef.MPSPackedFloat3.skipped = true

# Array in static is unimplemented
static.MPSFunctionConstantNoneArray.skipped = true

# Emit these.
const.MPSDeviceCapsIndex.skipped = false
const.MPSFunctionConstantIndex.skipped = false
const.MPSBatchSizeIndex.skipped = false
const.MPSUserConstantIndex.skipped = false
const.MPSNDArrayConstantIndex.skipped = false
const.MPSFunctionConstantIndexReserved.skipped = false
const.MPSTextureLinkingConstantIndex.skipped = false
const.MPSNDArrayConstantMultiDestIndex.skipped = false
const.MPSNDArrayConstantMultiDestIndex0.skipped = false
const.MPSNDArrayConstantMultiDestIndex1.skipped = false
const.MPSNDArrayConstantMultiDestSrcAddressingIndex.skipped = false
const.MPSNDArrayConstantMultiDestDstAddressingIndex.skipped = false
const.MPSUserAvailableFunctionConstantStartIndex.skipped = false

##
## Safety
##

# Unarchival may be unsafe if not requiring secure encoding, so let's
# be conservative in what we mark safe for now.
class.MPSKeyedUnarchiver.unsafe = true
